"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.simulateTransactionWithCommitment = void 0;
const tslib_1 = require("tslib");
/**
 * Copy of Connection.simulateTransaction that takes a commitment parameter.
 */
function simulateTransactionWithCommitment(connection, transaction, commitment = "recent") {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const connectionInner = connection;
        const transactionTyped = transaction;
        transaction.recentBlockhash = yield connectionInner._recentBlockhash(connectionInner._disableBlockhashCaching);
        const signData = transaction.serializeMessage();
        const wireTransaction = transactionTyped._serialize(signData);
        const encodedTransaction = wireTransaction.toString("base64");
        const config = { encoding: "base64", commitment };
        const res = yield connectionInner._rpcRequest("simulateTransaction", [
            encodedTransaction,
            config,
        ]);
        if (res.error) {
            throw new Error("failed to simulate transaction: " + res.error.message);
        }
        return res.result;
    });
}
exports.simulateTransactionWithCommitment = simulateTransactionWithCommitment;
//# sourceMappingURL=simulateTransaction.js.map