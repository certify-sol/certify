import type { Finality, TransactionSignature } from "@solana/web3.js";
import type { OperationOptions } from "retry";
import type { ReadonlyProvider } from "../interfaces";
import { TransactionReceipt } from "../transaction";
/**
 * Transaction which may or may not be confirmed.
 */
export declare class PendingTransaction {
    readonly provider: ReadonlyProvider;
    readonly signature: TransactionSignature;
    receipt: TransactionReceipt | null;
    constructor(provider: ReadonlyProvider, signature: TransactionSignature);
    /**
     * Waits for the confirmation of the transaction, via polling.
     * @returns
     */
    wait({ commitment, ...retryOpts }?: OperationOptions & {
        commitment: Finality;
    }): Promise<TransactionReceipt>;
}
//# sourceMappingURL=PendingTransaction.d.ts.map