import type { Transaction } from "@solana/web3.js";
import { PublicKey } from "@solana/web3.js";
export declare const DEFAULT_PUBLIC_KEY: PublicKey;
export interface WalletAdapter<Connected extends boolean = boolean> {
    publicKey: Connected extends true ? PublicKey : null;
    autoApprove: boolean;
    connected: Connected;
    signTransaction: (transaction: Transaction) => Promise<Transaction>;
    signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;
    connect: (args?: unknown) => Promise<void>;
    disconnect: () => void;
    on(event: string, fn: () => void): this;
}
export declare type ConnectedWallet = WalletAdapter<true>;
export declare type WalletAdapterConstructor = new (providerUrl: string, endpoint: string) => WalletAdapter;
//# sourceMappingURL=types.d.ts.map